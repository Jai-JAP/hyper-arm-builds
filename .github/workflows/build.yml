name: Build

on:
  push:
    branches: 
      - 'main'
    paths: 
      - 'latest_release'
  workflow_dispatch:

jobs:
  Build-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup env
        run: |
          echo "REL=$(cat latest_release)" >> $GITHUB_ENV

      - name: Set up multiarch/qemu-user-static
        run: |
          docker run --rm --privileged multiarch/qemu-user-static:register --reset

      - uses: docker://multiarch/debian-debootstrap:arm64-buster
        with:
          args: >
            bash -c
            "apt update && apt install curl lsb-release gnupg -y &&
            curl -fsSL https://deb.nodesource.com/setup_16.x | bash - &&
            apt install make gcc g++ git ruby libarchive-tools nodejs rpm graphicsmagick icnsutils xz-utils -y &&
            gem install fpm --no-document &&
            npm i -g yarn &&
            cd /github/workspace &&
            git clone https://github.com/vercel/hyper.git -b v${{env.REL}} --single-branch &&
            cd ./hyper &&
            sed -i 's/      },\n      {\n        \"target\": \"snap\",\n        \"arch\": [\n          \"x64\"\n        ]//' electron-builder.json
            sed '/\"x64\",/d' -i electron-builder.json &&
            yarn --network-timeout 1000000 &&
            npm i app-builder-lib &&
            USE_SYSTEM_FPM=true yarn run dist --arm64 &&
            mkdir -p ../pkgs &&
            mv ./dist/*.deb ../pkgs &&
            mv ./dist/*.rpm ../pkgs &&
            mv ./dist/*.pacman ../pkgs &&
            mv ./dist/*.tar.gz ../pkgs &&
            rm -rf hyper"
            
      - name: Upload
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "pkgs/*"
          body: "# v${{env.REL}} \nRefer https://github.com/vercel/hyper/releases/tag/v${{env.REL}} \narmv7l builds use electron 17.0.0"
          name: v${{env.REL}}
          tag: v${{env.REL}}

  Build-armhf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup env
        run: |
          echo "REL=$(cat latest_release)" >> $GITHUB_ENV

      - name: Set up multiarch/qemu-user-static
        run: |
          docker run --rm --privileged multiarch/qemu-user-static:register --reset

      - uses: docker://multiarch/debian-debootstrap:armhf-buster
        with:
          args: >
            bash -c
            "apt update && apt install curl lsb-release gnupg -y &&
            curl -fsSL https://deb.nodesource.com/setup_16.x | bash - &&
            apt install make gcc g++ git ruby libarchive-tools nodejs rpm graphicsmagick icnsutils xz-utils -y &&
            curl -k --remote-name --time-cond cacert.pem https://curl.se/ca/cacert.pem && mv cacert.pem /etc/pki/tls/cert.pem &&
            gem install fpm --no-document &&
            npm i -g yarn &&
            cd /github/workspace &&
            git clone https://github.com/vercel/hyper.git -b v${{env.REL}} --single-branch &&
            cd ./hyper &&
            sed -i '/\"electron\":/c\    \"electron\" : \"^17.0.0\",' package.json &&
            sed -i 's/      },\n      {\n        \"target\": \"snap\",\n        \"arch\": [\n          \"x64\"\n        ]//' electron-builder.json
            sed '/\"x64\",/d' -i electron-builder.json &&
            sed -i 's/\"arm64\"/\"armv7l\"/3' electron-builder.json &&
            yarn --network-timeout 1000000 &&
            npm i app-builder-lib &&
            USE_SYSTEM_FPM=true yarn run dist --armv7l &&
            mkdir -p ../pkgs &&
            mv ./dist/*.deb ../pkgs &&
            mv ./dist/*.rpm ../pkgs &&
            mv ./dist/*.pacman ../pkgs &&
            mv ./dist/*.tar.gz ../pkgs &&
            rm -rf hyper"
            
      - name: Upload
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "pkgs/*"
          body: "# v${{env.REL}} \nRefer https://github.com/vercel/hyper/releases/tag/v${{env.REL}} \narmv7l builds use electron 17.0.0"
          name: ${{env.REL}}
          tag: v${{env.REL}}
