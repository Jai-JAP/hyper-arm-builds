name: Build

on:
  push:
    branches: 
      - 'main'
    paths: 
      - 'latest_release'
  workflow_dispatch:

jobs:
  Build-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup env
        run: |
          echo "REL=$(cat latest_release)" >> $GITHUB_ENV

      - name: Set up multiarch/qemu-user-static
        run: |
          docker run --rm --privileged multiarch/qemu-user-static:register --reset

      - uses: docker://multiarch/ubuntu-core:arm64-bionic
        with:
          args: >
            bash -c
            "apt update && apt upgrade -y && apt install curl lsb-release gnupg ca-certificates -y &&
            curl -fsSL https://deb.nodesource.com/setup_16.x | bash - &&
            apt install make gcc g++ git ruby libarchive-tools nodejs rpm graphicsmagick icnsutils xz-utils -y &&
            gem install fpm --no-document &&
            npm i -g yarn &&
            cd /github/workspace &&
            git clone https://github.com/vercel/hyper.git -b v${{env.REL}} --single-branch &&
            cd ./hyper &&
            sed -e '/},/{:a;N;/]/!ba};/        \"target\": \"snap\",/d' -i electron-builder.json &&
            sed -e '/          \"x64\",/d' -i electron-builder.json &&
            PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 yarn --network-timeout 1000000 &&
            npm i app-builder-lib --legacy-peer-deps &&
            USE_SYSTEM_FPM=true yarn run dist --publish=never &&
            mkdir -p ../pkgs &&
            mv ./dist/*.deb ../pkgs &&
            mv ./dist/*.rpm ../pkgs &&
            mv ./dist/*.AppImage ../pkgs &&
            rm -rf hyper"
        env:
          GH_TOKEN: ${{secrets.TOKEN}}
          
      - name: Upload
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "pkgs/*"
          body: "# v${{env.REL}} \nRefer https://github.com/vercel/hyper/releases/tag/v${{env.REL}} \narmv7l builds use electron 17.0.0"
          name: v${{env.REL}}
          tag: v${{env.REL}}

  Build-armhf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup env
        run: |
          echo "REL=$(cat latest_release)" >> $GITHUB_ENV

      - name: Set up multiarch/qemu-user-static
        run: |
          docker run --rm --privileged multiarch/qemu-user-static:register --reset

      - uses: docker://multiarch/ubuntu-core:armhf-bionic
        with:
          args: >
            bash -c
            "apt update && apt upgrade -y && apt install curl lsb-release gnupg ca-certificates -y &&
            curl -fsSL https://deb.nodesource.com/setup_16.x | bash - &&
            apt install make gcc g++ git ruby libarchive-tools nodejs rpm graphicsmagick icnsutils xz-utils -y &&
            gem install fpm --no-document &&
            npm i -g yarn &&
            cd /github/workspace &&
            git clone https://github.com/vercel/hyper.git -b v${{env.REL}} --single-branch &&
            cd ./hyper &&
            sed -e '/\"electron\":/c\    \"electron\" : \"^17.0.0\",' -i package.json &&
            sed -e '/},/{:a;N;/]/!ba};/        \"target\": \"snap\",/d' -i electron-builder.json &&
            sed -e '/          \"x64\",/d' -i electron-builder.json &&
            sed -e 's/          \"arm64\"/          \"armv7l\"/g' -i electron-builder.json &&
            PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 yarn --network-timeout 1000000 &&
            npm i app-builder-lib --legacy-peer-deps &&
            USE_SYSTEM_FPM=true yarn run dist --publish=never &&
            mkdir -p ../pkgs &&
            mv ./dist/*.deb ../pkgs &&
            mv ./dist/*.rpm ../pkgs &&
            mv ./dist/*.AppImage ../pkgs &&
            rm -rf hyper"
        env:
          GH_TOKEN: ${{secrets.TOKEN}}
          
      - name: Upload
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "pkgs/*"
          body: "# v${{env.REL}} \nRefer https://github.com/vercel/hyper/releases/tag/v${{env.REL}} \narmv7l builds use electron 17.0.0"
          name: ${{env.REL}}
          tag: v${{env.REL}}
